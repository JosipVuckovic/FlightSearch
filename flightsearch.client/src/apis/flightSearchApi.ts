//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming



export type AdditionalServiceType = 0 | 1 | 2 | 3;

export class AdditionalServices {
    amount!: string | null;
    type!: AdditionalServiceType;

    init(_data?: any) {
        if (_data) {
            this.amount = _data["amount"] !== undefined ? _data["amount"] : <any>null;
            this.type = _data["type"] !== undefined ? _data["type"] : <any>null;
        }
    }

    static fromJS(data: any): AdditionalServices {
        data = typeof data === 'object' ? data : {};
        let result = new AdditionalServices();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["amount"] = this.amount !== undefined ? this.amount : <any>null;
        data["type"] = this.type !== undefined ? this.type : <any>null;
        return data;
    }
}

export class AircraftEquipment {
    code!: string | null;

    init(_data?: any) {
        if (_data) {
            this.code = _data["code"] !== undefined ? _data["code"] : <any>null;
        }
    }

    static fromJS(data: any): AircraftEquipment {
        data = typeof data === 'object' ? data : {};
        let result = new AircraftEquipment();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["code"] = this.code !== undefined ? this.code : <any>null;
        return data;
    }
}

export class AllotmentDetails {
    tourName!: string | null;
    tourReference!: string | null;

    init(_data?: any) {
        if (_data) {
            this.tourName = _data["tourName"] !== undefined ? _data["tourName"] : <any>null;
            this.tourReference = _data["tourReference"] !== undefined ? _data["tourReference"] : <any>null;
        }
    }

    static fromJS(data: any): AllotmentDetails {
        data = typeof data === 'object' ? data : {};
        let result = new AllotmentDetails();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tourName"] = this.tourName !== undefined ? this.tourName : <any>null;
        data["tourReference"] = this.tourReference !== undefined ? this.tourReference : <any>null;
        return data;
    }
}

export class BaggageAllowance {
    quantity!: number | null;
    weight!: number | null;
    weightUnit!: string | null;

    init(_data?: any) {
        if (_data) {
            this.quantity = _data["quantity"] !== undefined ? _data["quantity"] : <any>null;
            this.weight = _data["weight"] !== undefined ? _data["weight"] : <any>null;
            this.weightUnit = _data["weightUnit"] !== undefined ? _data["weightUnit"] : <any>null;
        }
    }

    static fromJS(data: any): BaggageAllowance {
        data = typeof data === 'object' ? data : {};
        let result = new BaggageAllowance();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["quantity"] = this.quantity !== undefined ? this.quantity : <any>null;
        data["weight"] = this.weight !== undefined ? this.weight : <any>null;
        data["weightUnit"] = this.weightUnit !== undefined ? this.weightUnit : <any>null;
        return data;
    }
}

export class Co2Emission {
    weight!: number | null;
    weightUnit!: string | null;
    cabin!: TravelClass;

    init(_data?: any) {
        if (_data) {
            this.weight = _data["weight"] !== undefined ? _data["weight"] : <any>null;
            this.weightUnit = _data["weightUnit"] !== undefined ? _data["weightUnit"] : <any>null;
            this.cabin = _data["cabin"] !== undefined ? _data["cabin"] : <any>null;
        }
    }

    static fromJS(data: any): Co2Emission {
        data = typeof data === 'object' ? data : {};
        let result = new Co2Emission();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["weight"] = this.weight !== undefined ? this.weight : <any>null;
        data["weightUnit"] = this.weightUnit !== undefined ? this.weightUnit : <any>null;
        data["cabin"] = this.cabin !== undefined ? this.cabin : <any>null;
        return data;
    }
}

export class Extended_Price {
    currency!: string | null;
    total!: string | null;
    base!: string | null;
    fees!: Fee[] | null;
    taxes!: Tax[] | null;
    refundableTaxes!: string | null;
    margin!: string | null;
    grandTotal!: string | null;
    billingCurrency!: string | null;
    additionalServices!: AdditionalServices[] | null;

    init(_data?: any) {
        if (_data) {
            this.currency = _data["currency"] !== undefined ? _data["currency"] : <any>null;
            this.total = _data["total"] !== undefined ? _data["total"] : <any>null;
            this.base = _data["base"] !== undefined ? _data["base"] : <any>null;
            if (Array.isArray(_data["fees"])) {
                this.fees = [] as any;
                for (let item of _data["fees"])
                    this.fees!.push(Fee.fromJS(item));
            }
            else {
                this.fees = <any>null;
            }
            if (Array.isArray(_data["taxes"])) {
                this.taxes = [] as any;
                for (let item of _data["taxes"])
                    this.taxes!.push(Tax.fromJS(item));
            }
            else {
                this.taxes = <any>null;
            }
            this.refundableTaxes = _data["refundableTaxes"] !== undefined ? _data["refundableTaxes"] : <any>null;
            this.margin = _data["margin"] !== undefined ? _data["margin"] : <any>null;
            this.grandTotal = _data["grandTotal"] !== undefined ? _data["grandTotal"] : <any>null;
            this.billingCurrency = _data["billingCurrency"] !== undefined ? _data["billingCurrency"] : <any>null;
            if (Array.isArray(_data["additionalServices"])) {
                this.additionalServices = [] as any;
                for (let item of _data["additionalServices"])
                    this.additionalServices!.push(AdditionalServices.fromJS(item));
            }
            else {
                this.additionalServices = <any>null;
            }
        }
    }

    static fromJS(data: any): Extended_Price {
        data = typeof data === 'object' ? data : {};
        let result = new Extended_Price();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["currency"] = this.currency !== undefined ? this.currency : <any>null;
        data["total"] = this.total !== undefined ? this.total : <any>null;
        data["base"] = this.base !== undefined ? this.base : <any>null;
        if (Array.isArray(this.fees)) {
            data["fees"] = [];
            for (let item of this.fees)
                data["fees"].push(item.toJSON());
        }
        if (Array.isArray(this.taxes)) {
            data["taxes"] = [];
            for (let item of this.taxes)
                data["taxes"].push(item.toJSON());
        }
        data["refundableTaxes"] = this.refundableTaxes !== undefined ? this.refundableTaxes : <any>null;
        data["margin"] = this.margin !== undefined ? this.margin : <any>null;
        data["grandTotal"] = this.grandTotal !== undefined ? this.grandTotal : <any>null;
        data["billingCurrency"] = this.billingCurrency !== undefined ? this.billingCurrency : <any>null;
        if (Array.isArray(this.additionalServices)) {
            data["additionalServices"] = [];
            for (let item of this.additionalServices)
                data["additionalServices"].push(item.toJSON());
        }
        return data;
    }
}

export class FareDetailsBySegment {
    segmentId!: string;
    cabin!: TravelClass;
    fareBasis!: string | null;
    brandedFare!: string | null;
    class!: string | null;
    isAllotment!: boolean | null;
    allotmentDetails!: AllotmentDetails;
    sliceDiceIndicator!: SliceDiceIndicator;
    includedCheckedBags!: BaggageAllowance;
    additionalServices!: AdditionalServices;

    init(_data?: any) {
        if (_data) {
            this.segmentId = _data["segmentId"] !== undefined ? _data["segmentId"] : <any>null;
            this.cabin = _data["cabin"] !== undefined ? _data["cabin"] : <any>null;
            this.fareBasis = _data["fareBasis"] !== undefined ? _data["fareBasis"] : <any>null;
            this.brandedFare = _data["brandedFare"] !== undefined ? _data["brandedFare"] : <any>null;
            this.class = _data["class"] !== undefined ? _data["class"] : <any>null;
            this.isAllotment = _data["isAllotment"] !== undefined ? _data["isAllotment"] : <any>null;
            this.allotmentDetails = _data["allotmentDetails"] ? AllotmentDetails.fromJS(_data["allotmentDetails"]) : <any>null;
            this.sliceDiceIndicator = _data["sliceDiceIndicator"] !== undefined ? _data["sliceDiceIndicator"] : <any>null;
            this.includedCheckedBags = _data["includedCheckedBags"] ? BaggageAllowance.fromJS(_data["includedCheckedBags"]) : <any>null;
            this.additionalServices = _data["additionalServices"] ? AdditionalServices.fromJS(_data["additionalServices"]) : <any>null;
        }
    }

    static fromJS(data: any): FareDetailsBySegment {
        data = typeof data === 'object' ? data : {};
        let result = new FareDetailsBySegment();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["segmentId"] = this.segmentId !== undefined ? this.segmentId : <any>null;
        data["cabin"] = this.cabin !== undefined ? this.cabin : <any>null;
        data["fareBasis"] = this.fareBasis !== undefined ? this.fareBasis : <any>null;
        data["brandedFare"] = this.brandedFare !== undefined ? this.brandedFare : <any>null;
        data["class"] = this.class !== undefined ? this.class : <any>null;
        data["isAllotment"] = this.isAllotment !== undefined ? this.isAllotment : <any>null;
        data["allotmentDetails"] = this.allotmentDetails ? this.allotmentDetails.toJSON() : <any>null;
        data["sliceDiceIndicator"] = this.sliceDiceIndicator !== undefined ? this.sliceDiceIndicator : <any>null;
        data["includedCheckedBags"] = this.includedCheckedBags ? this.includedCheckedBags.toJSON() : <any>null;
        data["additionalServices"] = this.additionalServices ? this.additionalServices.toJSON() : <any>null;
        return data;
    }
}

export class Fee {
    amount!: string | null;
    type!: FeeType;

    init(_data?: any) {
        if (_data) {
            this.amount = _data["amount"] !== undefined ? _data["amount"] : <any>null;
            this.type = _data["type"] !== undefined ? _data["type"] : <any>null;
        }
    }

    static fromJS(data: any): Fee {
        data = typeof data === 'object' ? data : {};
        let result = new Fee();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["amount"] = this.amount !== undefined ? this.amount : <any>null;
        data["type"] = this.type !== undefined ? this.type : <any>null;
        return data;
    }
}

export type FeeType = 0 | 1 | 2;

export class FlightEndPoint {
    iataCode!: string | null;
    terminal!: string | null;
    at!: Date | null;

    init(_data?: any) {
        if (_data) {
            this.iataCode = _data["iataCode"] !== undefined ? _data["iataCode"] : <any>null;
            this.terminal = _data["terminal"] !== undefined ? _data["terminal"] : <any>null;
            this.at = _data["at"] ? new Date(_data["at"].toString()) : <any>null;
        }
    }

    static fromJS(data: any): FlightEndPoint {
        data = typeof data === 'object' ? data : {};
        let result = new FlightEndPoint();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["iataCode"] = this.iataCode !== undefined ? this.iataCode : <any>null;
        data["terminal"] = this.terminal !== undefined ? this.terminal : <any>null;
        data["at"] = this.at ? this.at.toISOString() : <any>null;
        return data;
    }
}

export class FlightOffer {
    type!: string;
    id!: string;
    source!: FlightOfferSource;
    instantTicketingRequired!: boolean | null;
    disablePricing!: boolean | null;
    nonHomogeneous!: boolean | null;
    oneWay!: boolean | null;
    paymentCardRequired!: boolean | null;
    lastTicketingDate!: string | null;
    lastTicketingDateTime!: Date | null;
    numberOfBookableSeats!: number | null;
    itineraries!: Itineraries[] | null;
    price!: Extended_Price;
    pricingOptions!: PricingOptions;
    validatingAirlineCodes!: string[] | null;
    travelerPricings!: TravelerPricings[] | null;

    init(_data?: any) {
        if (_data) {
            this.type = _data["type"] !== undefined ? _data["type"] : <any>null;
            this.id = _data["id"] !== undefined ? _data["id"] : <any>null;
            this.source = _data["source"] !== undefined ? _data["source"] : <any>null;
            this.instantTicketingRequired = _data["instantTicketingRequired"] !== undefined ? _data["instantTicketingRequired"] : <any>null;
            this.disablePricing = _data["disablePricing"] !== undefined ? _data["disablePricing"] : <any>null;
            this.nonHomogeneous = _data["nonHomogeneous"] !== undefined ? _data["nonHomogeneous"] : <any>null;
            this.oneWay = _data["oneWay"] !== undefined ? _data["oneWay"] : <any>null;
            this.paymentCardRequired = _data["paymentCardRequired"] !== undefined ? _data["paymentCardRequired"] : <any>null;
            this.lastTicketingDate = _data["lastTicketingDate"] !== undefined ? _data["lastTicketingDate"] : <any>null;
            this.lastTicketingDateTime = _data["lastTicketingDateTime"] ? new Date(_data["lastTicketingDateTime"].toString()) : <any>null;
            this.numberOfBookableSeats = _data["numberOfBookableSeats"] !== undefined ? _data["numberOfBookableSeats"] : <any>null;
            if (Array.isArray(_data["itineraries"])) {
                this.itineraries = [] as any;
                for (let item of _data["itineraries"])
                    this.itineraries!.push(Itineraries.fromJS(item));
            }
            else {
                this.itineraries = <any>null;
            }
            this.price = _data["price"] ? Extended_Price.fromJS(_data["price"]) : <any>null;
            this.pricingOptions = _data["pricingOptions"] ? PricingOptions.fromJS(_data["pricingOptions"]) : <any>null;
            if (Array.isArray(_data["validatingAirlineCodes"])) {
                this.validatingAirlineCodes = [] as any;
                for (let item of _data["validatingAirlineCodes"])
                    this.validatingAirlineCodes!.push(item);
            }
            else {
                this.validatingAirlineCodes = <any>null;
            }
            if (Array.isArray(_data["travelerPricings"])) {
                this.travelerPricings = [] as any;
                for (let item of _data["travelerPricings"])
                    this.travelerPricings!.push(TravelerPricings.fromJS(item));
            }
            else {
                this.travelerPricings = <any>null;
            }
        }
    }

    static fromJS(data: any): FlightOffer {
        data = typeof data === 'object' ? data : {};
        let result = new FlightOffer();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["type"] = this.type !== undefined ? this.type : <any>null;
        data["id"] = this.id !== undefined ? this.id : <any>null;
        data["source"] = this.source !== undefined ? this.source : <any>null;
        data["instantTicketingRequired"] = this.instantTicketingRequired !== undefined ? this.instantTicketingRequired : <any>null;
        data["disablePricing"] = this.disablePricing !== undefined ? this.disablePricing : <any>null;
        data["nonHomogeneous"] = this.nonHomogeneous !== undefined ? this.nonHomogeneous : <any>null;
        data["oneWay"] = this.oneWay !== undefined ? this.oneWay : <any>null;
        data["paymentCardRequired"] = this.paymentCardRequired !== undefined ? this.paymentCardRequired : <any>null;
        data["lastTicketingDate"] = this.lastTicketingDate !== undefined ? this.lastTicketingDate : <any>null;
        data["lastTicketingDateTime"] = this.lastTicketingDateTime ? this.lastTicketingDateTime.toISOString() : <any>null;
        data["numberOfBookableSeats"] = this.numberOfBookableSeats !== undefined ? this.numberOfBookableSeats : <any>null;
        if (Array.isArray(this.itineraries)) {
            data["itineraries"] = [];
            for (let item of this.itineraries)
                data["itineraries"].push(item.toJSON());
        }
        data["price"] = this.price ? this.price.toJSON() : <any>null;
        data["pricingOptions"] = this.pricingOptions ? this.pricingOptions.toJSON() : <any>null;
        if (Array.isArray(this.validatingAirlineCodes)) {
            data["validatingAirlineCodes"] = [];
            for (let item of this.validatingAirlineCodes)
                data["validatingAirlineCodes"].push(item);
        }
        if (Array.isArray(this.travelerPricings)) {
            data["travelerPricings"] = [];
            for (let item of this.travelerPricings)
                data["travelerPricings"].push(item.toJSON());
        }
        return data;
    }
}

export type FlightOfferSource = 0;

export class FlightSearchRequest {
    originLocationCode!: string;
    destinationLocationCode!: string;
    departureDate!: string;
    returnDate!: string | null;
    adults!: number;
    children!: number;
    infants!: number;
    travelClass!: string | null;
    includedAirlineCodes!: string | null;
    excludedAirlineCodes!: string | null;
    nonStop!: boolean;
    currencyCode!: string | null;
    maxPrice!: number;
    max!: number;

    init(_data?: any) {
        if (_data) {
            this.originLocationCode = _data["originLocationCode"] !== undefined ? _data["originLocationCode"] : <any>null;
            this.destinationLocationCode = _data["destinationLocationCode"] !== undefined ? _data["destinationLocationCode"] : <any>null;
            this.departureDate = _data["departureDate"] !== undefined ? _data["departureDate"] : <any>null;
            this.returnDate = _data["returnDate"] !== undefined ? _data["returnDate"] : <any>null;
            this.adults = _data["adults"] !== undefined ? _data["adults"] : <any>null;
            this.children = _data["children"] !== undefined ? _data["children"] : <any>null;
            this.infants = _data["infants"] !== undefined ? _data["infants"] : <any>null;
            this.travelClass = _data["travelClass"] !== undefined ? _data["travelClass"] : <any>null;
            this.includedAirlineCodes = _data["includedAirlineCodes"] !== undefined ? _data["includedAirlineCodes"] : <any>null;
            this.excludedAirlineCodes = _data["excludedAirlineCodes"] !== undefined ? _data["excludedAirlineCodes"] : <any>null;
            this.nonStop = _data["nonStop"] !== undefined ? _data["nonStop"] : <any>null;
            this.currencyCode = _data["currencyCode"] !== undefined ? _data["currencyCode"] : <any>null;
            this.maxPrice = _data["maxPrice"] !== undefined ? _data["maxPrice"] : <any>null;
            this.max = _data["max"] !== undefined ? _data["max"] : <any>null;
        }
    }

    static fromJS(data: any): FlightSearchRequest {
        data = typeof data === 'object' ? data : {};
        let result = new FlightSearchRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["originLocationCode"] = this.originLocationCode !== undefined ? this.originLocationCode : <any>null;
        data["destinationLocationCode"] = this.destinationLocationCode !== undefined ? this.destinationLocationCode : <any>null;
        data["departureDate"] = this.departureDate !== undefined ? this.departureDate : <any>null;
        data["returnDate"] = this.returnDate !== undefined ? this.returnDate : <any>null;
        data["adults"] = this.adults !== undefined ? this.adults : <any>null;
        data["children"] = this.children !== undefined ? this.children : <any>null;
        data["infants"] = this.infants !== undefined ? this.infants : <any>null;
        data["travelClass"] = this.travelClass !== undefined ? this.travelClass : <any>null;
        data["includedAirlineCodes"] = this.includedAirlineCodes !== undefined ? this.includedAirlineCodes : <any>null;
        data["excludedAirlineCodes"] = this.excludedAirlineCodes !== undefined ? this.excludedAirlineCodes : <any>null;
        data["nonStop"] = this.nonStop !== undefined ? this.nonStop : <any>null;
        data["currencyCode"] = this.currencyCode !== undefined ? this.currencyCode : <any>null;
        data["maxPrice"] = this.maxPrice !== undefined ? this.maxPrice : <any>null;
        data["max"] = this.max !== undefined ? this.max : <any>null;
        return data;
    }
}

export class FlightStop {
    iataCode!: string | null;
    duration!: string | null;
    arrivalAt!: Date | null;
    departureAt!: Date | null;

    init(_data?: any) {
        if (_data) {
            this.iataCode = _data["iataCode"] !== undefined ? _data["iataCode"] : <any>null;
            this.duration = _data["duration"] !== undefined ? _data["duration"] : <any>null;
            this.arrivalAt = _data["arrivalAt"] ? new Date(_data["arrivalAt"].toString()) : <any>null;
            this.departureAt = _data["departureAt"] ? new Date(_data["departureAt"].toString()) : <any>null;
        }
    }

    static fromJS(data: any): FlightStop {
        data = typeof data === 'object' ? data : {};
        let result = new FlightStop();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["iataCode"] = this.iataCode !== undefined ? this.iataCode : <any>null;
        data["duration"] = this.duration !== undefined ? this.duration : <any>null;
        data["arrivalAt"] = this.arrivalAt ? this.arrivalAt.toISOString() : <any>null;
        data["departureAt"] = this.departureAt ? this.departureAt.toISOString() : <any>null;
        return data;
    }
}

export class Itineraries {
    duration!: string | null;
    segments!: Segment[];

    init(_data?: any) {
        if (_data) {
            this.duration = _data["duration"] !== undefined ? _data["duration"] : <any>null;
            if (Array.isArray(_data["segments"])) {
                this.segments = [] as any;
                for (let item of _data["segments"])
                    this.segments!.push(Segment.fromJS(item));
            }
            else {
                this.segments = <any>null;
            }
        }
    }

    static fromJS(data: any): Itineraries {
        data = typeof data === 'object' ? data : {};
        let result = new Itineraries();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["duration"] = this.duration !== undefined ? this.duration : <any>null;
        if (Array.isArray(this.segments)) {
            data["segments"] = [];
            for (let item of this.segments)
                data["segments"].push(item.toJSON());
        }
        return data;
    }
}

export class OperatingFlight {
    carrierCode!: string | null;

    init(_data?: any) {
        if (_data) {
            this.carrierCode = _data["carrierCode"] !== undefined ? _data["carrierCode"] : <any>null;
        }
    }

    static fromJS(data: any): OperatingFlight {
        data = typeof data === 'object' ? data : {};
        let result = new OperatingFlight();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["carrierCode"] = this.carrierCode !== undefined ? this.carrierCode : <any>null;
        return data;
    }
}

export class Price {
    currency!: string | null;
    total!: string | null;
    base!: string | null;
    fees!: Fee[] | null;
    taxes!: Tax[] | null;
    refundableTaxes!: string | null;

    init(_data?: any) {
        if (_data) {
            this.currency = _data["currency"] !== undefined ? _data["currency"] : <any>null;
            this.total = _data["total"] !== undefined ? _data["total"] : <any>null;
            this.base = _data["base"] !== undefined ? _data["base"] : <any>null;
            if (Array.isArray(_data["fees"])) {
                this.fees = [] as any;
                for (let item of _data["fees"])
                    this.fees!.push(Fee.fromJS(item));
            }
            else {
                this.fees = <any>null;
            }
            if (Array.isArray(_data["taxes"])) {
                this.taxes = [] as any;
                for (let item of _data["taxes"])
                    this.taxes!.push(Tax.fromJS(item));
            }
            else {
                this.taxes = <any>null;
            }
            this.refundableTaxes = _data["refundableTaxes"] !== undefined ? _data["refundableTaxes"] : <any>null;
        }
    }

    static fromJS(data: any): Price {
        data = typeof data === 'object' ? data : {};
        let result = new Price();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["currency"] = this.currency !== undefined ? this.currency : <any>null;
        data["total"] = this.total !== undefined ? this.total : <any>null;
        data["base"] = this.base !== undefined ? this.base : <any>null;
        if (Array.isArray(this.fees)) {
            data["fees"] = [];
            for (let item of this.fees)
                data["fees"].push(item.toJSON());
        }
        if (Array.isArray(this.taxes)) {
            data["taxes"] = [];
            for (let item of this.taxes)
                data["taxes"].push(item.toJSON());
        }
        data["refundableTaxes"] = this.refundableTaxes !== undefined ? this.refundableTaxes : <any>null;
        return data;
    }
}

export class PricingOptions {
    fareType!: string[] | null;
    includedCheckedBagsOnly!: boolean | null;
    refundableFare!: boolean | null;
    noRestrictionFare!: boolean | null;
    noPenaltyFare!: boolean | null;

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["fareType"])) {
                this.fareType = [] as any;
                for (let item of _data["fareType"])
                    this.fareType!.push(item);
            }
            else {
                this.fareType = <any>null;
            }
            this.includedCheckedBagsOnly = _data["includedCheckedBagsOnly"] !== undefined ? _data["includedCheckedBagsOnly"] : <any>null;
            this.refundableFare = _data["refundableFare"] !== undefined ? _data["refundableFare"] : <any>null;
            this.noRestrictionFare = _data["noRestrictionFare"] !== undefined ? _data["noRestrictionFare"] : <any>null;
            this.noPenaltyFare = _data["noPenaltyFare"] !== undefined ? _data["noPenaltyFare"] : <any>null;
        }
    }

    static fromJS(data: any): PricingOptions {
        data = typeof data === 'object' ? data : {};
        let result = new PricingOptions();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.fareType)) {
            data["fareType"] = [];
            for (let item of this.fareType)
                data["fareType"].push(item);
        }
        data["includedCheckedBagsOnly"] = this.includedCheckedBagsOnly !== undefined ? this.includedCheckedBagsOnly : <any>null;
        data["refundableFare"] = this.refundableFare !== undefined ? this.refundableFare : <any>null;
        data["noRestrictionFare"] = this.noRestrictionFare !== undefined ? this.noRestrictionFare : <any>null;
        data["noPenaltyFare"] = this.noPenaltyFare !== undefined ? this.noPenaltyFare : <any>null;
        return data;
    }
}

export class Segment {
    departure!: FlightEndPoint;
    arrival!: FlightEndPoint;
    carrierCode!: string | null;
    number!: string | null;
    aircraft!: AircraftEquipment;
    operating!: OperatingFlight;
    duration!: string | null;
    stops!: FlightStop[] | null;
    id!: string | null;
    numberOfStops!: number | null;
    blacklistedInEU!: boolean | null;
    co2Emissions!: Co2Emission[] | null;

    init(_data?: any) {
        if (_data) {
            this.departure = _data["departure"] ? FlightEndPoint.fromJS(_data["departure"]) : <any>null;
            this.arrival = _data["arrival"] ? FlightEndPoint.fromJS(_data["arrival"]) : <any>null;
            this.carrierCode = _data["carrierCode"] !== undefined ? _data["carrierCode"] : <any>null;
            this.number = _data["number"] !== undefined ? _data["number"] : <any>null;
            this.aircraft = _data["aircraft"] ? AircraftEquipment.fromJS(_data["aircraft"]) : <any>null;
            this.operating = _data["operating"] ? OperatingFlight.fromJS(_data["operating"]) : <any>null;
            this.duration = _data["duration"] !== undefined ? _data["duration"] : <any>null;
            if (Array.isArray(_data["stops"])) {
                this.stops = [] as any;
                for (let item of _data["stops"])
                    this.stops!.push(FlightStop.fromJS(item));
            }
            else {
                this.stops = <any>null;
            }
            this.id = _data["id"] !== undefined ? _data["id"] : <any>null;
            this.numberOfStops = _data["numberOfStops"] !== undefined ? _data["numberOfStops"] : <any>null;
            this.blacklistedInEU = _data["blacklistedInEU"] !== undefined ? _data["blacklistedInEU"] : <any>null;
            if (Array.isArray(_data["co2Emissions"])) {
                this.co2Emissions = [] as any;
                for (let item of _data["co2Emissions"])
                    this.co2Emissions!.push(Co2Emission.fromJS(item));
            }
            else {
                this.co2Emissions = <any>null;
            }
        }
    }

    static fromJS(data: any): Segment {
        data = typeof data === 'object' ? data : {};
        let result = new Segment();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["departure"] = this.departure ? this.departure.toJSON() : <any>null;
        data["arrival"] = this.arrival ? this.arrival.toJSON() : <any>null;
        data["carrierCode"] = this.carrierCode !== undefined ? this.carrierCode : <any>null;
        data["number"] = this.number !== undefined ? this.number : <any>null;
        data["aircraft"] = this.aircraft ? this.aircraft.toJSON() : <any>null;
        data["operating"] = this.operating ? this.operating.toJSON() : <any>null;
        data["duration"] = this.duration !== undefined ? this.duration : <any>null;
        if (Array.isArray(this.stops)) {
            data["stops"] = [];
            for (let item of this.stops)
                data["stops"].push(item.toJSON());
        }
        data["id"] = this.id !== undefined ? this.id : <any>null;
        data["numberOfStops"] = this.numberOfStops !== undefined ? this.numberOfStops : <any>null;
        data["blacklistedInEU"] = this.blacklistedInEU !== undefined ? this.blacklistedInEU : <any>null;
        if (Array.isArray(this.co2Emissions)) {
            data["co2Emissions"] = [];
            for (let item of this.co2Emissions)
                data["co2Emissions"].push(item.toJSON());
        }
        return data;
    }
}

export type SliceDiceIndicator = 0 | 1 | 2;

export class Tax {
    amount!: string | null;
    code!: string | null;

    init(_data?: any) {
        if (_data) {
            this.amount = _data["amount"] !== undefined ? _data["amount"] : <any>null;
            this.code = _data["code"] !== undefined ? _data["code"] : <any>null;
        }
    }

    static fromJS(data: any): Tax {
        data = typeof data === 'object' ? data : {};
        let result = new Tax();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["amount"] = this.amount !== undefined ? this.amount : <any>null;
        data["code"] = this.code !== undefined ? this.code : <any>null;
        return data;
    }
}

export type TravelClass = 1 | 2 | 3 | 4;

export type TravelerPricingFareOption = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11;

export class TravelerPricings {
    travelerId!: string;
    fareOption!: TravelerPricingFareOption;
    travelerType!: TravelerType;
    associatedAdultId!: string | null;
    price!: Price;
    fareDetailsBySegment!: FareDetailsBySegment[];

    init(_data?: any) {
        if (_data) {
            this.travelerId = _data["travelerId"] !== undefined ? _data["travelerId"] : <any>null;
            this.fareOption = _data["fareOption"] !== undefined ? _data["fareOption"] : <any>null;
            this.travelerType = _data["travelerType"] !== undefined ? _data["travelerType"] : <any>null;
            this.associatedAdultId = _data["associatedAdultId"] !== undefined ? _data["associatedAdultId"] : <any>null;
            this.price = _data["price"] ? Price.fromJS(_data["price"]) : <any>null;
            if (Array.isArray(_data["fareDetailsBySegment"])) {
                this.fareDetailsBySegment = [] as any;
                for (let item of _data["fareDetailsBySegment"])
                    this.fareDetailsBySegment!.push(FareDetailsBySegment.fromJS(item));
            }
            else {
                this.fareDetailsBySegment = <any>null;
            }
        }
    }

    static fromJS(data: any): TravelerPricings {
        data = typeof data === 'object' ? data : {};
        let result = new TravelerPricings();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["travelerId"] = this.travelerId !== undefined ? this.travelerId : <any>null;
        data["fareOption"] = this.fareOption !== undefined ? this.fareOption : <any>null;
        data["travelerType"] = this.travelerType !== undefined ? this.travelerType : <any>null;
        data["associatedAdultId"] = this.associatedAdultId !== undefined ? this.associatedAdultId : <any>null;
        data["price"] = this.price ? this.price.toJSON() : <any>null;
        if (Array.isArray(this.fareDetailsBySegment)) {
            data["fareDetailsBySegment"] = [];
            for (let item of this.fareDetailsBySegment)
                data["fareDetailsBySegment"].push(item.toJSON());
        }
        return data;
    }
}

export type TravelerType = 0 | 1 | 2 | 3 | 4 | 5 | 6;